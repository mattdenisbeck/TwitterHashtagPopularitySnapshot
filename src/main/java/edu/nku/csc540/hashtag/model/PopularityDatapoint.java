package edu.nku.csc540.hashtag.model;

import java.io.IOException;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMarshaller;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMarshalling;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;

@DynamoDBTable(tableName = "hashtagAppDatapointTable")
public class PopularityDatapoint {
	
	private final static ObjectMapper JSON = new ObjectMapper();
    static {
        JSON.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
        JSON.findAndRegisterModules();
    }
	
	private LocalDateTime timestamp;
	private Map<String,Integer> hashtagCounts = new HashMap<String,Integer>();
	private String snapshotID;
	private String id;
	
	public PopularityDatapoint(){};
	public PopularityDatapoint(LocalDateTime timestamp){
		this.timestamp = timestamp;
	}
	public PopularityDatapoint(LocalDateTime timestamp, Map<String,Integer> counts){
		this.timestamp = timestamp;
		this.hashtagCounts = counts;
	}
	
	@DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
	public String getId() {return id;}
	public void setId(String id) {this.id = id;}
	
	@DynamoDBAttribute(attributeName="Snapshot_id")
	public String getSnapshotID() { return snapshotID; }
	public void setSnapshotID(String snapshotID) { this.snapshotID = snapshotID; }
	
	@DynamoDBMarshalling(marshallerClass = LocalDateTimeConverter.class)
	@DynamoDBRangeKey(attributeName="Timestamp")
	public LocalDateTime getTimestamp() {return timestamp;}
	public void setTimestamp(LocalDateTime timestamp) {this.timestamp = timestamp;}
	
	@DynamoDBAttribute(attributeName="HashtagCounts")
	public Map<String,Integer> getHashtagCounts() {return hashtagCounts;}
	public void setHashtagCounts(Map<String,Integer> hashtagCounts) {this.hashtagCounts = hashtagCounts;}
	
	public void addHashtagCount(String hashtag, int count){
		hashtagCounts.put(hashtag, count);
	}
	
	public String toString(){
		String str = "";
		str += timestamp.toString() + ": [";
		for( Entry<String, Integer> ent: hashtagCounts.entrySet()){
			str += "(" + ent.getKey() + "," + ent.getValue() + ")"; 
		}
		str += "]";
		return str + this.getSnapshotID();
	}
	public byte[] toJsonAsBytes() {
        try {
            return JSON.writeValueAsBytes(this);
        } catch (IOException e) {
            return null;
        }
    }
	
	public static PopularityDatapoint fromJsonAsBytes(byte[] bytes) {
        try {
            return JSON.readValue(bytes, PopularityDatapoint.class);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    static public class LocalDateTimeConverter implements DynamoDBMarshaller<LocalDateTime> {

        @Override
        public String marshall(LocalDateTime time) {
            return time.toString();
        }

        @Override
        public LocalDateTime unmarshall(Class<LocalDateTime> dimensionType, String stringValue) {
            return LocalDateTime.parse(stringValue);
        }
    }

}
